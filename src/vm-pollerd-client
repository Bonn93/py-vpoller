#!/usr/bin/env python
#
# Copyright (c) 2013 Marin Atanasov Nikolov <dnaeon@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer
#    in this position and unchanged.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

"""
vm-poller.py is an application used for polling objects' information from a VMware vCenter server.

It is intended to be integrated into a Zabbix template for polling of ESX hosts and Datastores properties.
"""

import sys
import getopt
from vmpollerd.core import VMPollerClient

def main():

    if len(sys.argv) != 12:
        print 'usage: %s [-D|-H] -n <name> -p <property> -u <datastore-url> -c <poll|discover> -V <vcenter>' % sys.argv[0]
        raise SystemExit
    
    try:
        opts, args = getopt.getopt(sys.argv[1:], "DHn:p:u:c:V:")
    except getopt.GetoptError, e:
        print 'usage: %s [-D|-H] -n <name> -p <property> -u <datastore-url> -c <poll|discover> -V <vcent1er>' % sys.argv[0]
        raise SystemExit

    for opt, arg in opts:
        if opt == '-f':
            myConfig = arg
        elif opt == '-p':
            myProperty = arg
        elif opt == '-n':
            name = arg
        elif opt == '-u':
            ds_url = arg
        elif opt == '-D':
            pollInfo = 'datastores'
        elif opt == '-H':
            pollInfo = 'hosts'
        elif opt == '-c' and arg == 'poll':
            cmd = 'poll'
        elif opt == '-c' and arg == 'discover':
            cmd = 'discover'
        elif opt == '-V':
            vcenter = arg
    
    client = VMPollerClient("/etc/vm-poller/vm-pollerd-client.conf")

    msg = { "type": pollInfo,
            "vcenter": vcenter,
            "name": name,
            "ds_url": ds_url,
            "cmd": cmd,
            "property": myProperty,
            }

    result = client.run(msg)

    if cmd == "discover":
        print result
        return
    
    if result["status"] != 0:
        print result["reason"]
    else:
        print result["value"]

    
    
if __name__ == '__main__':
    main()

